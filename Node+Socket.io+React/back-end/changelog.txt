Socket.io Back-end

v2.3.2
minor:
- typing socket added.
- join_room socket removed and now there is a manage_room socket for both join and leave messages.
- CustomError class and errorHandler for HTTP.
patch:
- Proper error handling implemented for sockets.
- DTO types are actually named as a DTO type.

v3.4.4
major:
- Huge refactor; separates concerns by a api folder and a sockets folder.
minor:
- userJoined track added.
patch:
- The room schemas now use the user id as the _id.
- Collection name added to the chat schemas because it kept pluralizing the names; chat_alpha to chat_alphas (not cool).

v3.4.5
patch:
- userJoined track fixed.

v3.5.10
minor:
- Adds Rollup for the production build. Docker and fly config also added for hosting the server on fly.io.
patch:
- Circular dependency fix.
- user vars/fields/keys replaced with username.
- Leave message fix (supposed to be a object like the joined message).
- Sockets chatService manageRoom method wasn't supposed to be getting the userList on leave fix.
- Storing of the userList fix; every user wasn't seeing the same list because it was a instance of the class.

v3.6.11
minor:
- this.current user has been added to the sockets ChatService class so we can remove the connected user from the room and userList on disconnect. And changes how the userList method is used, it 
  doesn't run on a emit from the front-end anymore, just used solely in the server, so the update_user_list listener is removed.
patch:
- Fixed how the user could only send one message because of the error storing the message in the db; since I changed the _id to the userId, the documents had the same id, funny how I didn't notice.
- .env variables fix for production environment.

v3.6.14
patch:
- The SocketUser type is change to UserDTO.
- The leave and join messages now doesn't send to the sender because of front-end changes.
- The usersJoined room object keys are now a Map instead of a array + refactor of the userList method.
